{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.6.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2669146,"sourceType":"datasetVersion","datasetId":55151}],"dockerImageVersionId":28755,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Dataset Description:\n### Brazilian E-Commerce Public Dataset by Olist\nWelcome! This is a Brazilian ecommerce public dataset of orders made at Olist Store. The dataset has information of 100k orders from 2016 to 2018 made at multiple marketplaces in Brazil. Its features allows viewing an order from multiple dimensions: from order status, price, payment and freight performance to customer location, product attributes and finally reviews written by customers. We also released a geolocation dataset that relates Brazilian zip codes to lat/lng coordinates.\n\nThis is real commercial data, it has been anonymised, and references to the companies and partners in the review text have been replaced with the names of Game of Thrones great houses.\n\n## Context\nThis dataset was generously provided by Olist, the largest department store in Brazilian marketplaces. Olist connects small businesses from all over Brazil to channels without hassle and with a single contract. Those merchants are able to sell their products through the Olist Store and ship them directly to the customers using Olist logistics partners. \n\nAfter a customer purchases the product from Olist Store a seller gets notified to fulfill that order. Once the customer receives the product, or the estimated delivery date is due, the customer gets a satisfaction survey by email where he can give a note for the purchase experience and write down some comments.","metadata":{}},{"cell_type":"markdown","source":"| Column Name                            | Description                                                                                                   | Example                          |\n|----------------------------------------|---------------------------------------------------------------------------------------------------------------|----------------------------------|\n| **customer_id**                        | Unique identifier for each customer in the dataset.                                                          | `123456`                         |\n| **customer_unique_id**                 | A unique identifier for each customer that remains constant across multiple orders.                          | `CUST-001`                      |\n| **customer_zip_code_prefix**           | The prefix of the customer's postal code, indicating the geographical area.                                   | `12345`                          |\n| **customer_city**                      | The city where the customer resides.                                                                          | `New York`                       |\n| **customer_state**                     | The state where the customer resides.                                                                         | `NY`                             |\n| **order_id**                           | Unique identifier for each order made by a customer.                                                        | `00143d0f86d6fbd9f9b38ab440ac16f5` |\n| **order_status**                       | Current status of the order (e.g., delivered, pending, canceled).                                            | `delivered`                     |\n| **order_purchase_timestamp**           | Timestamp indicating when the order was placed.                                                              | `2024-10-01 12:30:00`           |\n| **order_approved_at**                 | Timestamp indicating when the order was approved for processing.                                             | `2024-10-01 12:31:00`           |\n| **order_delivered_carrier_date**      | Date when the order was handed over to the carrier for delivery.                                             | `2024-10-02 14:00:00`           |\n| **order_delivered_customer_date**     | Date when the order was delivered to the customer.                                                           | `2024-10-03 16:00:00`           |\n| **order_estimated_delivery_date**     | Estimated date by which the order is expected to be delivered.                                               | `2024-10-05`                     |\n| **payment_sequential**                 | Sequential number indicating the order of payments made for the order.                                       | `1`                              |\n| **payment_type**                       | Type of payment method used (e.g., credit card, bank transfer).                                              | `credit_card`                   |\n| **payment_installments**               | Number of installments in which the payment is made, if applicable.                                          | `3`                              |\n| **payment_value**                      | Total value of the payment made for the order.                                                               | `109.29`                         |\n| **order_item_id**                     | Unique identifier for each item within an order.                                                             | `item-001`                      |\n| **product_id**                        | Unique identifier for each product sold.                                                                      | `PROD-12345`                    |\n| **seller_id**                         | Unique identifier for the seller of the product.                                                              | `SELL-6789`                     |\n| **shipping_limit_date**               | Deadline by which the seller must ship the product.                                                           | `2024-10-04`                     |\n| **price**                             | Selling price of the product.                                                                                 | `21.33`                         |\n| **freight_value**                     | Cost of shipping for the order, based on weight and dimensions.                                              | `15.10`                         |\n| **product_category_name**              | Name of the category to which the product belongs.                                                            | `Electronics`                   |\n| **product_name_length**                | Length of the product name (number of characters).                                                           | `15`                             |\n| **product_description_length**         | Length of the product description (number of characters).                                                    | `120`                            |\n| **product_photos_qty**                 | Quantity of photos available for the product.                                                                 | `3`                              |\n| **product_weight_g**                   | Weight of the product in grams.                                                                                | `200`                            |\n| **product_length_cm**                  | Length of the product in centimeters.                                                                          | `30`                             |\n| **product_height_cm**                  | Height of the product in centimeters.                                                                         | `10`                             |\n| **product_width_cm**                   | Width of the product in centimeters.                                                                          | `20`                             |\n| **product_category_name_english**      | English name of the product category.                                                                         | `Home Appliances`               |\n| **seller_zip_code_prefix**             | The prefix of the seller's postal code, indicating the geographical area.                                    | `54321`                          |\n| **seller_city**                        | The city where the seller is located.                                                                         | `Los Angeles`                   |\n| **seller_state**                       | The state where the seller is located.                                                                        | `CA`                             |\n| **geolocation_zip_code_prefix**        | Zip code prefix for the geographical location associated with the order.                                     | `98765`                          |\n| **geolocation_lat**                    | Latitude of the geographical location associated with the order.                                              | `34.0522`                       |\n| **geolocation_lng**                    | Longitude of the geographical location associated with the order.                                             | `-118.2437`                     |\n| **geolocation_city**                   | City corresponding to the geographical coordinates.                                                          | `Los Angeles`                   |\n| **geolocation_state**                  | State corresponding to the geographical coordinates.                                                          | `CA`                             |\n| **review_id**                         | Unique identifier for each product review submitted by customers.                                            | `REV-001`                       |\n| **review_score**                       | Score given by the customer in the review, typically on a scale (e.g., 1-5).                                | `4.5`                            |\n| **review_comment_title**               | Title or subject of the customer’s review.                                                                    | `Great product!`                |\n| **review_comment_message**             | Detailed message or feedback provided by the customer in the review.                                         | `This product exceeded my expectations.` |\n| **review_creation_date**               | Date when the review was submitted by the customer.                                                          | `2024-10-05`                     |\n| **review_answer_timestamp**            | Timestamp indicating when the seller responded to the review, if applicable.                                 | `2024-10-06 10:00:00`           |\n| **product_category**                    | Additional categorization of the product, potentially used for internal classification or analysis.           | `Kitchen`                        |\n","metadata":{}},{"cell_type":"markdown","source":"# Importing Libraries","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom scipy import stats \nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nimport sqlite3\n\npd.set_option('display.max_columns',100)  \nfrom matplotlib.dates import MonthLocator, YearLocator\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-16T15:20:27.418304Z","iopub.execute_input":"2024-10-16T15:20:27.418709Z","iopub.status.idle":"2024-10-16T15:20:29.043871Z","shell.execute_reply.started":"2024-10-16T15:20:27.418638Z","shell.execute_reply":"2024-10-16T15:20:29.042611Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"# Importing Datasets","metadata":{}},{"cell_type":"code","source":"# Create function to load dataset\n\ndef get_result(query): # Create the get_result function\n    dbfile = 'olist.db' # Create file path\n    connection = sqlite3.connect(dbfile) # Accessing the dbfile\n    cursor = connection.cursor() # Create a cursor object to execute SQL commands on a database\n    cursor.execute(query) # Executing SQL commands\n    data = cursor.fetchall() # Retrieve the result of SQL commands\n    cursor.close() # Close the cursor\n    connection.close() # Close connection\n    return(data) # Return to the SQL command result","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:20:29.046961Z","iopub.execute_input":"2024-10-16T15:20:29.047458Z","iopub.status.idle":"2024-10-16T15:20:29.053711Z","shell.execute_reply.started":"2024-10-16T15:20:29.047381Z","shell.execute_reply":"2024-10-16T15:20:29.052647Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"\ndf_order_items = pd.read_csv(\"../input/olist_order_items_dataset.csv\")\ndf_order_reviews = pd.read_csv(\"../input/olist_order_reviews_dataset.csv\")\ndf_order = pd.read_csv(\"../input/olist_orders_dataset.csv\")\ndf_products = pd.read_csv(\"../input/olist_products_dataset.csv\")\ndf_geolocation = pd.read_csv(\"../input/olist_geolocation_dataset.csv\")\ndf_sellers = pd.read_csv(\"../input/olist_sellers_dataset.csv\")\ndf_order_payments = pd.read_csv(\"../input/olist_order_payments_dataset.csv\")\ndf_customer = pd.read_csv(\"../input/olist_customers_dataset.csv\")\ndf_product_category = pd.read_csv(\"../input/product_category_name_translation.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:20:29.055506Z","iopub.execute_input":"2024-10-16T15:20:29.055919Z","iopub.status.idle":"2024-10-16T15:20:33.692623Z","shell.execute_reply.started":"2024-10-16T15:20:29.055858Z","shell.execute_reply":"2024-10-16T15:20:33.691637Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"# Create SQLite connection\ndbfile = 'olist.db'\nconnection = sqlite3.connect(dbfile)\n\n# Insert each DataFrame into a table in the SQLite database\ndf_customer.to_sql('olist_order_customer_dataset', connection, if_exists='replace', index=False)\ndf_order.to_sql('olist_order_dataset', connection, if_exists='replace', index=False)\ndf_order_reviews.to_sql('olist_order_reviews_dataset', connection, if_exists='replace', index=False)\ndf_order_payments.to_sql('olist_order_payments_dataset', connection, if_exists='replace', index=False)\ndf_order_items.to_sql('olist_order_items_dataset', connection, if_exists='replace', index=False)\ndf_products.to_sql('olist_products_dataset', connection, if_exists='replace', index=False)\ndf_sellers.to_sql('olist_sellers_dataset', connection, if_exists='replace', index=False)\ndf_geolocation.to_sql('olist_geolocation_dataset', connection, if_exists='replace', index=False)\ndf_product_category.to_sql('product_category_name_translation', connection, if_exists='replace', index=False)\n\n# Close the connection after creating and inserting tables\nconnection.close()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:20:33.694520Z","iopub.execute_input":"2024-10-16T15:20:33.694848Z","iopub.status.idle":"2024-10-16T15:20:59.409103Z","shell.execute_reply.started":"2024-10-16T15:20:33.694797Z","shell.execute_reply":"2024-10-16T15:20:59.407802Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"# Function to get SQL result and return a DataFrame\ndef get_result(query):\n    connection = sqlite3.connect(dbfile)\n    data = pd.read_sql(query, connection)\n    connection.close()\n    return data\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:20:59.413782Z","iopub.execute_input":"2024-10-16T15:20:59.414196Z","iopub.status.idle":"2024-10-16T15:20:59.420052Z","shell.execute_reply.started":"2024-10-16T15:20:59.414127Z","shell.execute_reply":"2024-10-16T15:20:59.418901Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"# Data Merging","metadata":{}},{"cell_type":"code","source":"# Merging all tables step by step\n\n# Start by merging customer and order tables on 'customer_id'\ndf_olist = pd.merge(df_customer, df_order, on='customer_id', how='inner')\n\n# Merge with order payments on 'order_id'\ndf_olist = df_olist.merge(df_order_payments, on='order_id', how=\"inner\")\n\n# Merge with order items on 'order_id'\ndf_olist = df_olist.merge(df_order_items, on='order_id', how=\"inner\")\n\n# Merge with products on 'product_id'\ndf_olist = df_olist.merge(df_products, on='product_id', how=\"inner\")\n\n# Merge with product category on 'product_category_name'\ndf_olist = df_olist.merge(df_product_category, on='product_category_name', how=\"inner\")\n\n# Merge with seller information on 'seller_id'\ndf_olist = df_olist.merge(df_sellers, on='seller_id', how=\"inner\")\n\n# Merge with geolocation on 'geolocation_zip_code_prefix'\ndf_olist = df_olist.merge(df_geolocation, left_on='customer_zip_code_prefix', right_on='geolocation_zip_code_prefix', how=\"inner\")\n\n# Optionally, merge with order reviews if needed (on 'order_id')\ndf_olist = df_olist.merge(df_order_reviews, on='order_id', how=\"left\")\n\n# Display the merged dataframe\nprint(df_olist.head())\n\n# Check the shape of the final merged dataframe\nprint(f\"Merged dataframe shape: {df_olist.shape}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:20:59.423946Z","iopub.execute_input":"2024-10-16T15:20:59.424369Z","iopub.status.idle":"2024-10-16T15:21:37.805847Z","shell.execute_reply.started":"2024-10-16T15:20:59.424300Z","shell.execute_reply":"2024-10-16T15:21:37.804803Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"                        customer_id                customer_unique_id  \\\n0  06b8999e2fba1a1fbc88172c00ba8bc7  861eff4711a542e4b93843c6dd7febb0   \n1  06b8999e2fba1a1fbc88172c00ba8bc7  861eff4711a542e4b93843c6dd7febb0   \n2  06b8999e2fba1a1fbc88172c00ba8bc7  861eff4711a542e4b93843c6dd7febb0   \n3  06b8999e2fba1a1fbc88172c00ba8bc7  861eff4711a542e4b93843c6dd7febb0   \n4  06b8999e2fba1a1fbc88172c00ba8bc7  861eff4711a542e4b93843c6dd7febb0   \n\n   customer_zip_code_prefix customer_city customer_state  \\\n0                     14409        franca             SP   \n1                     14409        franca             SP   \n2                     14409        franca             SP   \n3                     14409        franca             SP   \n4                     14409        franca             SP   \n\n                           order_id order_status order_purchase_timestamp  \\\n0  00e7ee1b050b8499577073aeb2a297a1    delivered      2017-05-16 15:05:35   \n1  00e7ee1b050b8499577073aeb2a297a1    delivered      2017-05-16 15:05:35   \n2  00e7ee1b050b8499577073aeb2a297a1    delivered      2017-05-16 15:05:35   \n3  00e7ee1b050b8499577073aeb2a297a1    delivered      2017-05-16 15:05:35   \n4  00e7ee1b050b8499577073aeb2a297a1    delivered      2017-05-16 15:05:35   \n\n     order_approved_at order_delivered_carrier_date  \\\n0  2017-05-16 15:22:12          2017-05-23 10:47:57   \n1  2017-05-16 15:22:12          2017-05-23 10:47:57   \n2  2017-05-16 15:22:12          2017-05-23 10:47:57   \n3  2017-05-16 15:22:12          2017-05-23 10:47:57   \n4  2017-05-16 15:22:12          2017-05-23 10:47:57   \n\n  order_delivered_customer_date order_estimated_delivery_date  \\\n0           2017-05-25 10:35:35           2017-06-05 00:00:00   \n1           2017-05-25 10:35:35           2017-06-05 00:00:00   \n2           2017-05-25 10:35:35           2017-06-05 00:00:00   \n3           2017-05-25 10:35:35           2017-06-05 00:00:00   \n4           2017-05-25 10:35:35           2017-06-05 00:00:00   \n\n   payment_sequential payment_type  payment_installments  payment_value  \\\n0                   1  credit_card                     2         146.87   \n1                   1  credit_card                     2         146.87   \n2                   1  credit_card                     2         146.87   \n3                   1  credit_card                     2         146.87   \n4                   1  credit_card                     2         146.87   \n\n   order_item_id                        product_id  \\\n0              1  a9516a079e37a9c9c36b9b78b10169e8   \n1              1  a9516a079e37a9c9c36b9b78b10169e8   \n2              1  a9516a079e37a9c9c36b9b78b10169e8   \n3              1  a9516a079e37a9c9c36b9b78b10169e8   \n4              1  a9516a079e37a9c9c36b9b78b10169e8   \n\n                          seller_id  shipping_limit_date   price  \\\n0  7c67e1448b00f6e969d365cea6b010ab  2017-05-22 15:22:12  124.99   \n1  7c67e1448b00f6e969d365cea6b010ab  2017-05-22 15:22:12  124.99   \n2  7c67e1448b00f6e969d365cea6b010ab  2017-05-22 15:22:12  124.99   \n3  7c67e1448b00f6e969d365cea6b010ab  2017-05-22 15:22:12  124.99   \n4  7c67e1448b00f6e969d365cea6b010ab  2017-05-22 15:22:12  124.99   \n\n   freight_value product_category_name  product_name_lenght  \\\n0          21.88     moveis_escritorio                 41.0   \n1          21.88     moveis_escritorio                 41.0   \n2          21.88     moveis_escritorio                 41.0   \n3          21.88     moveis_escritorio                 41.0   \n4          21.88     moveis_escritorio                 41.0   \n\n   product_description_lenght  product_photos_qty  product_weight_g  \\\n0                      1141.0                 1.0            8683.0   \n1                      1141.0                 1.0            8683.0   \n2                      1141.0                 1.0            8683.0   \n3                      1141.0                 1.0            8683.0   \n4                      1141.0                 1.0            8683.0   \n\n   product_length_cm  product_height_cm  product_width_cm  \\\n0               54.0               64.0              31.0   \n1               54.0               64.0              31.0   \n2               54.0               64.0              31.0   \n3               54.0               64.0              31.0   \n4               54.0               64.0              31.0   \n\n  product_category_name_english  seller_zip_code_prefix      seller_city  \\\n0              office_furniture                    8577  itaquaquecetuba   \n1              office_furniture                    8577  itaquaquecetuba   \n2              office_furniture                    8577  itaquaquecetuba   \n3              office_furniture                    8577  itaquaquecetuba   \n4              office_furniture                    8577  itaquaquecetuba   \n\n  seller_state  geolocation_zip_code_prefix  geolocation_lat  geolocation_lng  \\\n0           SP                        14409       -20.509897       -47.397866   \n1           SP                        14409       -20.497396       -47.399241   \n2           SP                        14409       -20.510459       -47.399553   \n3           SP                        14409       -20.480940       -47.394161   \n4           SP                        14409       -20.515413       -47.398194   \n\n  geolocation_city geolocation_state                         review_id  \\\n0           franca                SP  88b8b52d46df026a9d1ad2136a59b30b   \n1           franca                SP  88b8b52d46df026a9d1ad2136a59b30b   \n2           franca                SP  88b8b52d46df026a9d1ad2136a59b30b   \n3           franca                SP  88b8b52d46df026a9d1ad2136a59b30b   \n4           franca                SP  88b8b52d46df026a9d1ad2136a59b30b   \n\n   review_score review_comment_title review_comment_message  \\\n0           4.0                  NaN                    NaN   \n1           4.0                  NaN                    NaN   \n2           4.0                  NaN                    NaN   \n3           4.0                  NaN                    NaN   \n4           4.0                  NaN                    NaN   \n\n  review_creation_date review_answer_timestamp  \n0  2017-05-26 00:00:00     2017-05-30 22:34:40  \n1  2017-05-26 00:00:00     2017-05-30 22:34:40  \n2  2017-05-26 00:00:00     2017-05-30 22:34:40  \n3  2017-05-26 00:00:00     2017-05-30 22:34:40  \n4  2017-05-26 00:00:00     2017-05-30 22:34:40  \nMerged dataframe shape: (17798047, 45)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Product Category","metadata":{}},{"cell_type":"code","source":"# Create a product category classification function\ndef classify_product(x):\n    categories = {\n        'Beauty & Health': ['health_beauty','perfumery','diapers_and_hygiene'],\n        'Book & Stationary': ['stationery','books_general_interest','books_imported','books_technical'],\n        'Electronics': ['computers_accessories','auto','air_conditioning','telephony','watches_gifts','consoles_games',\n                        'electronics','small_appliances','small_appliances_home_oven_and_coffee','signaling_and_security',\n                        'musical_instruments','fixed_telephony','tablets_printing_image','computers','audio','security_and_services'],\n        'Entertainment': ['sports_leisure','toys','art','music','dvds_blu_ray','christmas_supplies','party_supplies','cine_photo',\n                        'cds_dvds_musicals','arts_and_craftmanship'],\n        'Fashion': ['baby','fashio_female_clothing','cool_stuff','fashion_bags_accessories','fashion_male_clothing','fashion_shoes',\n                    'fashion_underwear_beach','fashion_sport','fashion_childrens_clothes'],\n        'Food & Drinks': ['food_drink','drinks','food'],\n        'Furniture': ['office_furniture','home_confort','furniture_decor','bed_bath_table','kitchen_dining_laundry_garden_furniture',\n                    'home_construction','furniture_living_room','furniture_bedroom','furniture_mattress_and_upholstery','home_comfort_2'],\n        'Home & Garden': ['housewares','garden_tools','pet_shop','construction_tools_lights','luggage_accessories','home_appliances_2',\n                        'home_appliances','market_place','costruction_tools_garden','la_cuisine','flowers'],\n        'Industry & Construction': ['costruction_tools_tools','construction_tools_construction','industry_commerce_and_business',\n                                    'construction_tools_safety','agro_industry_and_commerce']\n                    }\n    for category, keywords in categories.items():\n        if x in keywords:\n            return category\n    return None\n\ndf_olist['product_category'] = df_olist['product_category_name_english'].apply(classify_product)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:21:37.807760Z","iopub.execute_input":"2024-10-16T15:21:37.808204Z","iopub.status.idle":"2024-10-16T15:22:28.096795Z","shell.execute_reply.started":"2024-10-16T15:21:37.808032Z","shell.execute_reply":"2024-10-16T15:22:28.095483Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"# Duplicates","metadata":{}},{"cell_type":"code","source":"# Get the shape of the merged dataframe\nprint(f\"Shape of merged dataframe: {df_olist.shape}\")\n\n# Check for duplicates (rows with the same data across all columns)\nduplicates = df_olist.duplicated()\n\n# Number of duplicate rows\nnum_duplicates = duplicates.sum()\nprint(f\"Number of duplicate rows: {num_duplicates}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:22:28.098594Z","iopub.execute_input":"2024-10-16T15:22:28.098962Z","iopub.status.idle":"2024-10-16T15:23:35.641778Z","shell.execute_reply.started":"2024-10-16T15:22:28.098893Z","shell.execute_reply":"2024-10-16T15:23:35.640675Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"Shape of merged dataframe: (17798047, 46)\nNumber of duplicate rows: 5616145\n","output_type":"stream"}]},{"cell_type":"code","source":"df_olist_no_duplicates = df_olist.drop_duplicates()\n\n# Get the shape after removing duplicates\nprint(f\"Shape after removing duplicates: {df_olist_no_duplicates.shape}\")","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:23:35.644033Z","iopub.execute_input":"2024-10-16T15:23:35.644482Z","iopub.status.idle":"2024-10-16T15:25:18.108354Z","shell.execute_reply.started":"2024-10-16T15:23:35.644401Z","shell.execute_reply":"2024-10-16T15:25:18.107062Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Shape after removing duplicates: (12181902, 46)\n","output_type":"stream"}]},{"cell_type":"code","source":"df_olist.tail()","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:25:18.109842Z","iopub.execute_input":"2024-10-16T15:25:18.110166Z","iopub.status.idle":"2024-10-16T15:25:18.169531Z","shell.execute_reply.started":"2024-10-16T15:25:18.110114Z","shell.execute_reply":"2024-10-16T15:25:18.168572Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"                               customer_id                customer_unique_id  \\\n17798042  8caeb53ff1ed9da844ec4e1f6bab7dd8  a6d9bf9bd00ca98f44894adab0578a6f   \n17798043  8caeb53ff1ed9da844ec4e1f6bab7dd8  a6d9bf9bd00ca98f44894adab0578a6f   \n17798044  8caeb53ff1ed9da844ec4e1f6bab7dd8  a6d9bf9bd00ca98f44894adab0578a6f   \n17798045  d39cfc95a6ba2cbd9cfa6bb862fd8d77  aad1c7f54ec632ddf6ac8b080b27cd27   \n17798046  d39cfc95a6ba2cbd9cfa6bb862fd8d77  aad1c7f54ec632ddf6ac8b080b27cd27   \n\n          customer_zip_code_prefix       customer_city customer_state  \\\n17798042                     70422            brasilia             DF   \n17798043                     70422            brasilia             DF   \n17798044                     70422            brasilia             DF   \n17798045                     88333  balneario camboriu             SC   \n17798046                     88333  balneario camboriu             SC   \n\n                                  order_id order_status  \\\n17798042  37a7476e58da10721b5e55ba4be6807d    delivered   \n17798043  37a7476e58da10721b5e55ba4be6807d    delivered   \n17798044  37a7476e58da10721b5e55ba4be6807d    delivered   \n17798045  aa4bd1aa4ff7249ea156343f704478a0    delivered   \n17798046  aa4bd1aa4ff7249ea156343f704478a0    delivered   \n\n         order_purchase_timestamp    order_approved_at  \\\n17798042      2017-12-06 20:22:29  2017-12-06 20:33:01   \n17798043      2017-12-06 20:22:29  2017-12-06 20:33:01   \n17798044      2017-12-06 20:22:29  2017-12-06 20:33:01   \n17798045      2018-08-18 09:47:18  2018-08-18 09:55:14   \n17798046      2018-08-18 09:47:18  2018-08-18 09:55:14   \n\n         order_delivered_carrier_date order_delivered_customer_date  \\\n17798042          2017-12-11 17:30:14           2017-12-12 22:14:31   \n17798043          2017-12-11 17:30:14           2017-12-12 22:14:31   \n17798044          2017-12-11 17:30:14           2017-12-12 22:14:31   \n17798045          2018-08-20 08:49:00           2018-08-24 20:28:32   \n17798046          2018-08-20 08:49:00           2018-08-24 20:28:32   \n\n         order_estimated_delivery_date  payment_sequential payment_type  \\\n17798042           2017-12-22 00:00:00                   2  credit_card   \n17798043           2017-12-22 00:00:00                   1  credit_card   \n17798044           2017-12-22 00:00:00                   1  credit_card   \n17798045           2018-09-12 00:00:00                   1   debit_card   \n17798046           2018-09-12 00:00:00                   1   debit_card   \n\n          payment_installments  payment_value  order_item_id  \\\n17798042                     5         129.16              1   \n17798043                     5         129.17              1   \n17798044                     5         129.17              1   \n17798045                     1         103.59              1   \n17798046                     1         103.59              1   \n\n                                product_id                         seller_id  \\\n17798042  dc36a7859b743d8610a2bbbaea26ece9  191d55f7edb8524d525ed01b20fe32e8   \n17798043  dc36a7859b743d8610a2bbbaea26ece9  191d55f7edb8524d525ed01b20fe32e8   \n17798044  dc36a7859b743d8610a2bbbaea26ece9  191d55f7edb8524d525ed01b20fe32e8   \n17798045  15b47fee52c928cd7d75996f767efb8b  da7039f29f90ce5b4846ffc0fcc93beb   \n17798046  15b47fee52c928cd7d75996f767efb8b  da7039f29f90ce5b4846ffc0fcc93beb   \n\n          shipping_limit_date  price  freight_value  \\\n17798042  2017-12-12 20:33:01  249.0           9.33   \n17798043  2017-12-12 20:33:01  249.0           9.33   \n17798044  2017-12-12 20:33:01  249.0           9.33   \n17798045  2018-08-21 09:55:14   84.9          18.69   \n17798046  2018-08-21 09:55:14   84.9          18.69   \n\n              product_category_name  product_name_lenght  \\\n17798042  moveis_colchao_e_estofado                 29.0   \n17798043  moveis_colchao_e_estofado                 29.0   \n17798044  moveis_colchao_e_estofado                 29.0   \n17798045                  cine_foto                 49.0   \n17798046                  cine_foto                 49.0   \n\n          product_description_lenght  product_photos_qty  product_weight_g  \\\n17798042                      2073.0                 2.0            2500.0   \n17798043                      2073.0                 2.0            2500.0   \n17798044                      2073.0                 2.0            2500.0   \n17798045                       503.0                 2.0             150.0   \n17798046                       503.0                 2.0             150.0   \n\n          product_length_cm  product_height_cm  product_width_cm  \\\n17798042               41.0               21.0              21.0   \n17798043               41.0               21.0              21.0   \n17798044               41.0               21.0              21.0   \n17798045               16.0                5.0              12.0   \n17798046               16.0                5.0              12.0   \n\n              product_category_name_english  seller_zip_code_prefix  \\\n17798042  furniture_mattress_and_upholstery                   73020   \n17798043  furniture_mattress_and_upholstery                   73020   \n17798044  furniture_mattress_and_upholstery                   73020   \n17798045                         cine_photo                    9041   \n17798046                         cine_photo                    9041   \n\n          seller_city seller_state  geolocation_zip_code_prefix  \\\n17798042     brasilia           DF                        70422   \n17798043     brasilia           DF                        70422   \n17798044     brasilia           DF                        70422   \n17798045  santo andre           SP                        88333   \n17798046  santo andre           SP                        88333   \n\n          geolocation_lat  geolocation_lng    geolocation_city  \\\n17798042       -15.824902       -47.892586            brasilia   \n17798043       -15.824902       -47.892586            brasilia   \n17798044       -15.824902       -47.892586            brasilia   \n17798045       -27.009866       -48.581613  balneario camboriu   \n17798046       -29.152506       -49.580324  balneário camboriú   \n\n         geolocation_state                         review_id  review_score  \\\n17798042                DF  da40dfc77067cb3ca317ee3d9f628b13           5.0   \n17798043                DF  da40dfc77067cb3ca317ee3d9f628b13           5.0   \n17798044                DF  da40dfc77067cb3ca317ee3d9f628b13           5.0   \n17798045                SC  72c985f117915f6e8312848d7534572f           4.0   \n17798046                SC  72c985f117915f6e8312848d7534572f           4.0   \n\n         review_comment_title review_comment_message review_creation_date  \\\n17798042                  NaN  Obrigada, vcs são 10!  2017-12-13 00:00:00   \n17798043                  NaN  Obrigada, vcs são 10!  2017-12-13 00:00:00   \n17798044                  NaN  Obrigada, vcs são 10!  2017-12-13 00:00:00   \n17798045                  NaN                    NaN  2018-08-25 00:00:00   \n17798046                  NaN                    NaN  2018-08-25 00:00:00   \n\n         review_answer_timestamp product_category  \n17798042     2017-12-14 11:32:20        Furniture  \n17798043     2017-12-14 11:32:20        Furniture  \n17798044     2017-12-14 11:32:20        Furniture  \n17798045     2018-08-27 23:46:57    Entertainment  \n17798046     2018-08-27 23:46:57    Entertainment  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>customer_id</th>\n      <th>customer_unique_id</th>\n      <th>customer_zip_code_prefix</th>\n      <th>customer_city</th>\n      <th>customer_state</th>\n      <th>order_id</th>\n      <th>order_status</th>\n      <th>order_purchase_timestamp</th>\n      <th>order_approved_at</th>\n      <th>order_delivered_carrier_date</th>\n      <th>order_delivered_customer_date</th>\n      <th>order_estimated_delivery_date</th>\n      <th>payment_sequential</th>\n      <th>payment_type</th>\n      <th>payment_installments</th>\n      <th>payment_value</th>\n      <th>order_item_id</th>\n      <th>product_id</th>\n      <th>seller_id</th>\n      <th>shipping_limit_date</th>\n      <th>price</th>\n      <th>freight_value</th>\n      <th>product_category_name</th>\n      <th>product_name_lenght</th>\n      <th>product_description_lenght</th>\n      <th>product_photos_qty</th>\n      <th>product_weight_g</th>\n      <th>product_length_cm</th>\n      <th>product_height_cm</th>\n      <th>product_width_cm</th>\n      <th>product_category_name_english</th>\n      <th>seller_zip_code_prefix</th>\n      <th>seller_city</th>\n      <th>seller_state</th>\n      <th>geolocation_zip_code_prefix</th>\n      <th>geolocation_lat</th>\n      <th>geolocation_lng</th>\n      <th>geolocation_city</th>\n      <th>geolocation_state</th>\n      <th>review_id</th>\n      <th>review_score</th>\n      <th>review_comment_title</th>\n      <th>review_comment_message</th>\n      <th>review_creation_date</th>\n      <th>review_answer_timestamp</th>\n      <th>product_category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>17798042</th>\n      <td>8caeb53ff1ed9da844ec4e1f6bab7dd8</td>\n      <td>a6d9bf9bd00ca98f44894adab0578a6f</td>\n      <td>70422</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>37a7476e58da10721b5e55ba4be6807d</td>\n      <td>delivered</td>\n      <td>2017-12-06 20:22:29</td>\n      <td>2017-12-06 20:33:01</td>\n      <td>2017-12-11 17:30:14</td>\n      <td>2017-12-12 22:14:31</td>\n      <td>2017-12-22 00:00:00</td>\n      <td>2</td>\n      <td>credit_card</td>\n      <td>5</td>\n      <td>129.16</td>\n      <td>1</td>\n      <td>dc36a7859b743d8610a2bbbaea26ece9</td>\n      <td>191d55f7edb8524d525ed01b20fe32e8</td>\n      <td>2017-12-12 20:33:01</td>\n      <td>249.0</td>\n      <td>9.33</td>\n      <td>moveis_colchao_e_estofado</td>\n      <td>29.0</td>\n      <td>2073.0</td>\n      <td>2.0</td>\n      <td>2500.0</td>\n      <td>41.0</td>\n      <td>21.0</td>\n      <td>21.0</td>\n      <td>furniture_mattress_and_upholstery</td>\n      <td>73020</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>70422</td>\n      <td>-15.824902</td>\n      <td>-47.892586</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>da40dfc77067cb3ca317ee3d9f628b13</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>Obrigada, vcs são 10!</td>\n      <td>2017-12-13 00:00:00</td>\n      <td>2017-12-14 11:32:20</td>\n      <td>Furniture</td>\n    </tr>\n    <tr>\n      <th>17798043</th>\n      <td>8caeb53ff1ed9da844ec4e1f6bab7dd8</td>\n      <td>a6d9bf9bd00ca98f44894adab0578a6f</td>\n      <td>70422</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>37a7476e58da10721b5e55ba4be6807d</td>\n      <td>delivered</td>\n      <td>2017-12-06 20:22:29</td>\n      <td>2017-12-06 20:33:01</td>\n      <td>2017-12-11 17:30:14</td>\n      <td>2017-12-12 22:14:31</td>\n      <td>2017-12-22 00:00:00</td>\n      <td>1</td>\n      <td>credit_card</td>\n      <td>5</td>\n      <td>129.17</td>\n      <td>1</td>\n      <td>dc36a7859b743d8610a2bbbaea26ece9</td>\n      <td>191d55f7edb8524d525ed01b20fe32e8</td>\n      <td>2017-12-12 20:33:01</td>\n      <td>249.0</td>\n      <td>9.33</td>\n      <td>moveis_colchao_e_estofado</td>\n      <td>29.0</td>\n      <td>2073.0</td>\n      <td>2.0</td>\n      <td>2500.0</td>\n      <td>41.0</td>\n      <td>21.0</td>\n      <td>21.0</td>\n      <td>furniture_mattress_and_upholstery</td>\n      <td>73020</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>70422</td>\n      <td>-15.824902</td>\n      <td>-47.892586</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>da40dfc77067cb3ca317ee3d9f628b13</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>Obrigada, vcs são 10!</td>\n      <td>2017-12-13 00:00:00</td>\n      <td>2017-12-14 11:32:20</td>\n      <td>Furniture</td>\n    </tr>\n    <tr>\n      <th>17798044</th>\n      <td>8caeb53ff1ed9da844ec4e1f6bab7dd8</td>\n      <td>a6d9bf9bd00ca98f44894adab0578a6f</td>\n      <td>70422</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>37a7476e58da10721b5e55ba4be6807d</td>\n      <td>delivered</td>\n      <td>2017-12-06 20:22:29</td>\n      <td>2017-12-06 20:33:01</td>\n      <td>2017-12-11 17:30:14</td>\n      <td>2017-12-12 22:14:31</td>\n      <td>2017-12-22 00:00:00</td>\n      <td>1</td>\n      <td>credit_card</td>\n      <td>5</td>\n      <td>129.17</td>\n      <td>1</td>\n      <td>dc36a7859b743d8610a2bbbaea26ece9</td>\n      <td>191d55f7edb8524d525ed01b20fe32e8</td>\n      <td>2017-12-12 20:33:01</td>\n      <td>249.0</td>\n      <td>9.33</td>\n      <td>moveis_colchao_e_estofado</td>\n      <td>29.0</td>\n      <td>2073.0</td>\n      <td>2.0</td>\n      <td>2500.0</td>\n      <td>41.0</td>\n      <td>21.0</td>\n      <td>21.0</td>\n      <td>furniture_mattress_and_upholstery</td>\n      <td>73020</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>70422</td>\n      <td>-15.824902</td>\n      <td>-47.892586</td>\n      <td>brasilia</td>\n      <td>DF</td>\n      <td>da40dfc77067cb3ca317ee3d9f628b13</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>Obrigada, vcs são 10!</td>\n      <td>2017-12-13 00:00:00</td>\n      <td>2017-12-14 11:32:20</td>\n      <td>Furniture</td>\n    </tr>\n    <tr>\n      <th>17798045</th>\n      <td>d39cfc95a6ba2cbd9cfa6bb862fd8d77</td>\n      <td>aad1c7f54ec632ddf6ac8b080b27cd27</td>\n      <td>88333</td>\n      <td>balneario camboriu</td>\n      <td>SC</td>\n      <td>aa4bd1aa4ff7249ea156343f704478a0</td>\n      <td>delivered</td>\n      <td>2018-08-18 09:47:18</td>\n      <td>2018-08-18 09:55:14</td>\n      <td>2018-08-20 08:49:00</td>\n      <td>2018-08-24 20:28:32</td>\n      <td>2018-09-12 00:00:00</td>\n      <td>1</td>\n      <td>debit_card</td>\n      <td>1</td>\n      <td>103.59</td>\n      <td>1</td>\n      <td>15b47fee52c928cd7d75996f767efb8b</td>\n      <td>da7039f29f90ce5b4846ffc0fcc93beb</td>\n      <td>2018-08-21 09:55:14</td>\n      <td>84.9</td>\n      <td>18.69</td>\n      <td>cine_foto</td>\n      <td>49.0</td>\n      <td>503.0</td>\n      <td>2.0</td>\n      <td>150.0</td>\n      <td>16.0</td>\n      <td>5.0</td>\n      <td>12.0</td>\n      <td>cine_photo</td>\n      <td>9041</td>\n      <td>santo andre</td>\n      <td>SP</td>\n      <td>88333</td>\n      <td>-27.009866</td>\n      <td>-48.581613</td>\n      <td>balneario camboriu</td>\n      <td>SC</td>\n      <td>72c985f117915f6e8312848d7534572f</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2018-08-25 00:00:00</td>\n      <td>2018-08-27 23:46:57</td>\n      <td>Entertainment</td>\n    </tr>\n    <tr>\n      <th>17798046</th>\n      <td>d39cfc95a6ba2cbd9cfa6bb862fd8d77</td>\n      <td>aad1c7f54ec632ddf6ac8b080b27cd27</td>\n      <td>88333</td>\n      <td>balneario camboriu</td>\n      <td>SC</td>\n      <td>aa4bd1aa4ff7249ea156343f704478a0</td>\n      <td>delivered</td>\n      <td>2018-08-18 09:47:18</td>\n      <td>2018-08-18 09:55:14</td>\n      <td>2018-08-20 08:49:00</td>\n      <td>2018-08-24 20:28:32</td>\n      <td>2018-09-12 00:00:00</td>\n      <td>1</td>\n      <td>debit_card</td>\n      <td>1</td>\n      <td>103.59</td>\n      <td>1</td>\n      <td>15b47fee52c928cd7d75996f767efb8b</td>\n      <td>da7039f29f90ce5b4846ffc0fcc93beb</td>\n      <td>2018-08-21 09:55:14</td>\n      <td>84.9</td>\n      <td>18.69</td>\n      <td>cine_foto</td>\n      <td>49.0</td>\n      <td>503.0</td>\n      <td>2.0</td>\n      <td>150.0</td>\n      <td>16.0</td>\n      <td>5.0</td>\n      <td>12.0</td>\n      <td>cine_photo</td>\n      <td>9041</td>\n      <td>santo andre</td>\n      <td>SP</td>\n      <td>88333</td>\n      <td>-29.152506</td>\n      <td>-49.580324</td>\n      <td>balneário camboriú</td>\n      <td>SC</td>\n      <td>72c985f117915f6e8312848d7534572f</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2018-08-25 00:00:00</td>\n      <td>2018-08-27 23:46:57</td>\n      <td>Entertainment</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# NaNs","metadata":{}},{"cell_type":"code","source":"# Check for total NaN values\n\nnan_value = df_olist.isna().sum()[df_olist.isna().sum() > 0]\n\n# Construct a dataframe consists of NaN count and NaN percentage from the dataset\nnan_df_olist = pd.DataFrame ({'NaN_count ': nan_value,'NaN_percentage' : nan_value/len(df_olist)*100}).sort_values(by='NaN_percentage', ascending=False)\n\n# Show the data\nnan_df_olist","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:25:18.170952Z","iopub.execute_input":"2024-10-16T15:25:18.171560Z","iopub.status.idle":"2024-10-16T15:26:34.296943Z","shell.execute_reply.started":"2024-10-16T15:25:18.171483Z","shell.execute_reply":"2024-10-16T15:26:34.295528Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"                               NaN_count   NaN_percentage\nreview_comment_title             15793023       88.734584\nreview_comment_message           10520979       59.113109\norder_delivered_customer_date      362272        2.035459\norder_delivered_carrier_date       186547        1.048132\nreview_id                          139182        0.782007\nreview_score                       139182        0.782007\nreview_creation_date               139182        0.782007\nreview_answer_timestamp            139182        0.782007\norder_approved_at                    2825        0.015873\nproduct_weight_g                      108        0.000607\nproduct_length_cm                     108        0.000607\nproduct_height_cm                     108        0.000607\nproduct_width_cm                      108        0.000607","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>NaN_count</th>\n      <th>NaN_percentage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>review_comment_title</th>\n      <td>15793023</td>\n      <td>88.734584</td>\n    </tr>\n    <tr>\n      <th>review_comment_message</th>\n      <td>10520979</td>\n      <td>59.113109</td>\n    </tr>\n    <tr>\n      <th>order_delivered_customer_date</th>\n      <td>362272</td>\n      <td>2.035459</td>\n    </tr>\n    <tr>\n      <th>order_delivered_carrier_date</th>\n      <td>186547</td>\n      <td>1.048132</td>\n    </tr>\n    <tr>\n      <th>review_id</th>\n      <td>139182</td>\n      <td>0.782007</td>\n    </tr>\n    <tr>\n      <th>review_score</th>\n      <td>139182</td>\n      <td>0.782007</td>\n    </tr>\n    <tr>\n      <th>review_creation_date</th>\n      <td>139182</td>\n      <td>0.782007</td>\n    </tr>\n    <tr>\n      <th>review_answer_timestamp</th>\n      <td>139182</td>\n      <td>0.782007</td>\n    </tr>\n    <tr>\n      <th>order_approved_at</th>\n      <td>2825</td>\n      <td>0.015873</td>\n    </tr>\n    <tr>\n      <th>product_weight_g</th>\n      <td>108</td>\n      <td>0.000607</td>\n    </tr>\n    <tr>\n      <th>product_length_cm</th>\n      <td>108</td>\n      <td>0.000607</td>\n    </tr>\n    <tr>\n      <th>product_height_cm</th>\n      <td>108</td>\n      <td>0.000607</td>\n    </tr>\n    <tr>\n      <th>product_width_cm</th>\n      <td>108</td>\n      <td>0.000607</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_olist.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:26:34.298737Z","iopub.execute_input":"2024-10-16T15:26:34.299203Z","iopub.status.idle":"2024-10-16T15:26:34.314640Z","shell.execute_reply.started":"2024-10-16T15:26:34.299069Z","shell.execute_reply":"2024-10-16T15:26:34.313196Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 17798047 entries, 0 to 17798046\nData columns (total 46 columns):\ncustomer_id                      object\ncustomer_unique_id               object\ncustomer_zip_code_prefix         int64\ncustomer_city                    object\ncustomer_state                   object\norder_id                         object\norder_status                     object\norder_purchase_timestamp         object\norder_approved_at                object\norder_delivered_carrier_date     object\norder_delivered_customer_date    object\norder_estimated_delivery_date    object\npayment_sequential               int64\npayment_type                     object\npayment_installments             int64\npayment_value                    float64\norder_item_id                    int64\nproduct_id                       object\nseller_id                        object\nshipping_limit_date              object\nprice                            float64\nfreight_value                    float64\nproduct_category_name            object\nproduct_name_lenght              float64\nproduct_description_lenght       float64\nproduct_photos_qty               float64\nproduct_weight_g                 float64\nproduct_length_cm                float64\nproduct_height_cm                float64\nproduct_width_cm                 float64\nproduct_category_name_english    object\nseller_zip_code_prefix           int64\nseller_city                      object\nseller_state                     object\ngeolocation_zip_code_prefix      int64\ngeolocation_lat                  float64\ngeolocation_lng                  float64\ngeolocation_city                 object\ngeolocation_state                object\nreview_id                        object\nreview_score                     float64\nreview_comment_title             object\nreview_comment_message           object\nreview_creation_date             object\nreview_answer_timestamp          object\nproduct_category                 object\ndtypes: float64(13), int64(6), object(27)\nmemory usage: 6.2+ GB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Type Conversion","metadata":{}},{"cell_type":"code","source":"# List of date columns that need to be converted\ndate_columns = [\n    'order_purchase_timestamp', \n    'order_approved_at', \n    'order_delivered_carrier_date', \n    'order_delivered_customer_date', \n    'order_estimated_delivery_date', \n    'shipping_limit_date', \n    'review_creation_date', \n    'review_answer_timestamp'\n]\n\n# Convert the columns to datetime format\nfor col in date_columns:\n    df_olist[col] = pd.to_datetime(df_olist[col], errors='coerce')\n\nprint(df_olist.dtypes)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:26:34.316766Z","iopub.execute_input":"2024-10-16T15:26:34.317391Z","iopub.status.idle":"2024-10-16T15:28:41.812683Z","shell.execute_reply.started":"2024-10-16T15:26:34.317252Z","shell.execute_reply":"2024-10-16T15:28:41.811520Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"customer_id                              object\ncustomer_unique_id                       object\ncustomer_zip_code_prefix                  int64\ncustomer_city                            object\ncustomer_state                           object\norder_id                                 object\norder_status                             object\norder_purchase_timestamp         datetime64[ns]\norder_approved_at                datetime64[ns]\norder_delivered_carrier_date     datetime64[ns]\norder_delivered_customer_date    datetime64[ns]\norder_estimated_delivery_date    datetime64[ns]\npayment_sequential                        int64\npayment_type                             object\npayment_installments                      int64\npayment_value                           float64\norder_item_id                             int64\nproduct_id                               object\nseller_id                                object\nshipping_limit_date              datetime64[ns]\nprice                                   float64\nfreight_value                           float64\nproduct_category_name                    object\nproduct_name_lenght                     float64\nproduct_description_lenght              float64\nproduct_photos_qty                      float64\nproduct_weight_g                        float64\nproduct_length_cm                       float64\nproduct_height_cm                       float64\nproduct_width_cm                        float64\nproduct_category_name_english            object\nseller_zip_code_prefix                    int64\nseller_city                              object\nseller_state                             object\ngeolocation_zip_code_prefix               int64\ngeolocation_lat                         float64\ngeolocation_lng                         float64\ngeolocation_city                         object\ngeolocation_state                        object\nreview_id                                object\nreview_score                            float64\nreview_comment_title                     object\nreview_comment_message                   object\nreview_creation_date             datetime64[ns]\nreview_answer_timestamp          datetime64[ns]\nproduct_category                         object\ndtype: object\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Outliers","metadata":{}},{"cell_type":"code","source":"df_olist.describe()  ","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:28:41.814680Z","iopub.execute_input":"2024-10-16T15:28:41.815171Z","iopub.status.idle":"2024-10-16T15:29:06.627187Z","shell.execute_reply.started":"2024-10-16T15:28:41.815085Z","shell.execute_reply":"2024-10-16T15:29:06.626138Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"       customer_zip_code_prefix  payment_sequential  payment_installments  \\\ncount              1.779805e+07        1.779805e+07          1.779805e+07   \nmean               3.271155e+04        1.090372e+00          2.942330e+00   \nstd                2.695851e+04        6.713270e-01          2.804206e+00   \nmin                1.003000e+03        1.000000e+00          0.000000e+00   \n25%                1.314000e+04        1.000000e+00          1.000000e+00   \n50%                2.390000e+04        1.000000e+00          1.000000e+00   \n75%                3.840000e+04        1.000000e+00          4.000000e+00   \nmax                9.998000e+04        2.900000e+01          2.400000e+01   \n\n       payment_value  order_item_id         price  freight_value  \\\ncount   1.779805e+07   1.779805e+07  1.779805e+07   1.779805e+07   \nmean    1.747541e+02   1.206065e+00  1.216220e+02   1.964404e+01   \nstd     2.672102e+02   7.015177e-01  1.863895e+02   1.499880e+01   \nmin     0.000000e+00   1.000000e+00  8.500000e-01   0.000000e+00   \n25%     6.177000e+01   1.000000e+00  3.990000e+01   1.347000e+01   \n50%     1.100000e+02   1.000000e+00  7.499000e+01   1.628000e+01   \n75%     1.923200e+02   1.000000e+00  1.350000e+02   2.043000e+01   \nmax     1.366408e+04   2.100000e+01  6.735000e+03   4.096800e+02   \n\n       product_name_lenght  product_description_lenght  product_photos_qty  \\\ncount         1.779805e+07                1.779805e+07        1.779805e+07   \nmean          4.865465e+01                7.789316e+02        2.191626e+00   \nstd           1.007313e+01                6.467210e+02        1.716164e+00   \nmin           5.000000e+00                4.000000e+00        1.000000e+00   \n25%           4.200000e+01                3.410000e+02        1.000000e+00   \n50%           5.100000e+01                5.950000e+02        1.000000e+00   \n75%           5.700000e+01                9.750000e+02        3.000000e+00   \nmax           7.600000e+01                3.992000e+03        2.000000e+01   \n\n       product_weight_g  product_length_cm  product_height_cm  \\\ncount      1.779794e+07       1.779794e+07       1.779794e+07   \nmean       2.154203e+03       3.053386e+01       1.672543e+01   \nstd        3.841973e+03       1.646493e+01       1.351224e+01   \nmin        0.000000e+00       7.000000e+00       2.000000e+00   \n25%        3.000000e+02       1.800000e+01       8.000000e+00   \n50%        7.000000e+02       2.500000e+01       1.300000e+01   \n75%        1.825000e+03       3.900000e+01       2.000000e+01   \nmax        4.042500e+04       1.050000e+02       1.050000e+02   \n\n       product_width_cm  seller_zip_code_prefix  geolocation_zip_code_prefix  \\\ncount      1.779794e+07            1.779805e+07                 1.779805e+07   \nmean       2.318398e+01            2.517948e+04                 3.271155e+04   \nstd        1.179166e+01            2.807250e+04                 2.695851e+04   \nmin        6.000000e+00            1.001000e+03                 1.003000e+03   \n25%        1.500000e+01            6.805000e+03                 1.314000e+04   \n50%        2.000000e+01            1.393000e+04                 2.390000e+04   \n75%        3.000000e+01            3.031500e+04                 3.840000e+04   \nmax        1.180000e+02            9.973000e+04                 9.998000e+04   \n\n       geolocation_lat  geolocation_lng  review_score  \ncount     1.779805e+07     1.779805e+07  1.765886e+07  \nmean     -2.196873e+01    -4.594286e+01  4.032775e+00  \nstd       4.276438e+00     3.557037e+00  1.397639e+00  \nmin      -3.660537e+01    -1.014668e+02  1.000000e+00  \n25%      -2.357597e+01    -4.761341e+01  4.000000e+00  \n50%      -2.291064e+01    -4.645680e+01  5.000000e+00  \n75%      -2.044041e+01    -4.335117e+01  5.000000e+00  \nmax       4.506593e+01     1.382021e+01  5.000000e+00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>customer_zip_code_prefix</th>\n      <th>payment_sequential</th>\n      <th>payment_installments</th>\n      <th>payment_value</th>\n      <th>order_item_id</th>\n      <th>price</th>\n      <th>freight_value</th>\n      <th>product_name_lenght</th>\n      <th>product_description_lenght</th>\n      <th>product_photos_qty</th>\n      <th>product_weight_g</th>\n      <th>product_length_cm</th>\n      <th>product_height_cm</th>\n      <th>product_width_cm</th>\n      <th>seller_zip_code_prefix</th>\n      <th>geolocation_zip_code_prefix</th>\n      <th>geolocation_lat</th>\n      <th>geolocation_lng</th>\n      <th>review_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779794e+07</td>\n      <td>1.779794e+07</td>\n      <td>1.779794e+07</td>\n      <td>1.779794e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.779805e+07</td>\n      <td>1.765886e+07</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3.271155e+04</td>\n      <td>1.090372e+00</td>\n      <td>2.942330e+00</td>\n      <td>1.747541e+02</td>\n      <td>1.206065e+00</td>\n      <td>1.216220e+02</td>\n      <td>1.964404e+01</td>\n      <td>4.865465e+01</td>\n      <td>7.789316e+02</td>\n      <td>2.191626e+00</td>\n      <td>2.154203e+03</td>\n      <td>3.053386e+01</td>\n      <td>1.672543e+01</td>\n      <td>2.318398e+01</td>\n      <td>2.517948e+04</td>\n      <td>3.271155e+04</td>\n      <td>-2.196873e+01</td>\n      <td>-4.594286e+01</td>\n      <td>4.032775e+00</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.695851e+04</td>\n      <td>6.713270e-01</td>\n      <td>2.804206e+00</td>\n      <td>2.672102e+02</td>\n      <td>7.015177e-01</td>\n      <td>1.863895e+02</td>\n      <td>1.499880e+01</td>\n      <td>1.007313e+01</td>\n      <td>6.467210e+02</td>\n      <td>1.716164e+00</td>\n      <td>3.841973e+03</td>\n      <td>1.646493e+01</td>\n      <td>1.351224e+01</td>\n      <td>1.179166e+01</td>\n      <td>2.807250e+04</td>\n      <td>2.695851e+04</td>\n      <td>4.276438e+00</td>\n      <td>3.557037e+00</td>\n      <td>1.397639e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.003000e+03</td>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>8.500000e-01</td>\n      <td>0.000000e+00</td>\n      <td>5.000000e+00</td>\n      <td>4.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>7.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>6.000000e+00</td>\n      <td>1.001000e+03</td>\n      <td>1.003000e+03</td>\n      <td>-3.660537e+01</td>\n      <td>-1.014668e+02</td>\n      <td>1.000000e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.314000e+04</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>6.177000e+01</td>\n      <td>1.000000e+00</td>\n      <td>3.990000e+01</td>\n      <td>1.347000e+01</td>\n      <td>4.200000e+01</td>\n      <td>3.410000e+02</td>\n      <td>1.000000e+00</td>\n      <td>3.000000e+02</td>\n      <td>1.800000e+01</td>\n      <td>8.000000e+00</td>\n      <td>1.500000e+01</td>\n      <td>6.805000e+03</td>\n      <td>1.314000e+04</td>\n      <td>-2.357597e+01</td>\n      <td>-4.761341e+01</td>\n      <td>4.000000e+00</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.390000e+04</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>1.100000e+02</td>\n      <td>1.000000e+00</td>\n      <td>7.499000e+01</td>\n      <td>1.628000e+01</td>\n      <td>5.100000e+01</td>\n      <td>5.950000e+02</td>\n      <td>1.000000e+00</td>\n      <td>7.000000e+02</td>\n      <td>2.500000e+01</td>\n      <td>1.300000e+01</td>\n      <td>2.000000e+01</td>\n      <td>1.393000e+04</td>\n      <td>2.390000e+04</td>\n      <td>-2.291064e+01</td>\n      <td>-4.645680e+01</td>\n      <td>5.000000e+00</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3.840000e+04</td>\n      <td>1.000000e+00</td>\n      <td>4.000000e+00</td>\n      <td>1.923200e+02</td>\n      <td>1.000000e+00</td>\n      <td>1.350000e+02</td>\n      <td>2.043000e+01</td>\n      <td>5.700000e+01</td>\n      <td>9.750000e+02</td>\n      <td>3.000000e+00</td>\n      <td>1.825000e+03</td>\n      <td>3.900000e+01</td>\n      <td>2.000000e+01</td>\n      <td>3.000000e+01</td>\n      <td>3.031500e+04</td>\n      <td>3.840000e+04</td>\n      <td>-2.044041e+01</td>\n      <td>-4.335117e+01</td>\n      <td>5.000000e+00</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>9.998000e+04</td>\n      <td>2.900000e+01</td>\n      <td>2.400000e+01</td>\n      <td>1.366408e+04</td>\n      <td>2.100000e+01</td>\n      <td>6.735000e+03</td>\n      <td>4.096800e+02</td>\n      <td>7.600000e+01</td>\n      <td>3.992000e+03</td>\n      <td>2.000000e+01</td>\n      <td>4.042500e+04</td>\n      <td>1.050000e+02</td>\n      <td>1.050000e+02</td>\n      <td>1.180000e+02</td>\n      <td>9.973000e+04</td>\n      <td>9.998000e+04</td>\n      <td>4.506593e+01</td>\n      <td>1.382021e+01</td>\n      <td>5.000000e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# We will determine a data is an outlier, if its value is greater than Q3 + 1.5 IQR\n\n# Outliers Detection\n# Calculate the upper and lower limits\n#IQR\n\nq1 = df_olist['price'].quantile(0.25)\nq3 = df_olist['price'].quantile(0.75)\n\niqr = q3 - q1\n\nupper = q3 + 1.5*iqr\nlower = q1 - 1.5*iqr\n\n# Filtering data without outliers\ndf_olist = df_olist[df_olist['price'] < upper]","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:29:06.628654Z","iopub.execute_input":"2024-10-16T15:29:06.628994Z","iopub.status.idle":"2024-10-16T15:29:17.821534Z","shell.execute_reply.started":"2024-10-16T15:29:06.628933Z","shell.execute_reply":"2024-10-16T15:29:17.820391Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"df_olist['product_category_name_english'].unique()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:29:17.823459Z","iopub.execute_input":"2024-10-16T15:29:17.823810Z","iopub.status.idle":"2024-10-16T15:29:18.688876Z","shell.execute_reply.started":"2024-10-16T15:29:17.823747Z","shell.execute_reply":"2024-10-16T15:29:18.687863Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"array(['office_furniture', 'housewares', 'sports_leisure',\n       'home_appliances', 'bed_bath_table', 'toys', 'baby', 'auto',\n       'health_beauty', 'telephony', 'fashion_bags_accessories',\n       'stationery', 'watches_gifts', 'garden_tools', 'cool_stuff',\n       'furniture_decor', 'construction_tools_construction',\n       'books_general_interest', 'perfumery', 'pet_shop', 'fashion_shoes',\n       'electronics', 'computers_accessories', 'furniture_living_room',\n       'christmas_supplies', 'small_appliances', 'consoles_games',\n       'home_confort', 'fashion_male_clothing', 'audio',\n       'industry_commerce_and_business', 'fixed_telephony',\n       'kitchen_dining_laundry_garden_furniture', 'cine_photo', 'music',\n       'food', 'home_appliances_2', 'market_place', 'books_technical',\n       'art', 'drinks', 'luggage_accessories', 'home_construction',\n       'flowers', 'musical_instruments', 'food_drink', 'books_imported',\n       'fashion_sport', 'construction_tools_safety',\n       'costruction_tools_garden', 'furniture_bedroom',\n       'costruction_tools_tools', 'dvds_blu_ray',\n       'fashio_female_clothing', 'air_conditioning', 'party_supplies',\n       'tablets_printing_image', 'signaling_and_security',\n       'fashion_underwear_beach', 'construction_tools_lights',\n       'arts_and_craftmanship', 'agro_industry_and_commerce',\n       'furniture_mattress_and_upholstery', 'home_comfort_2',\n       'cds_dvds_musicals', 'la_cuisine', 'diapers_and_hygiene',\n       'small_appliances_home_oven_and_coffee',\n       'fashion_childrens_clothes', 'computers', 'security_and_services'],\n      dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df_olist['product_category'].unique()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:29:18.690661Z","iopub.execute_input":"2024-10-16T15:29:18.691018Z","iopub.status.idle":"2024-10-16T15:29:19.564499Z","shell.execute_reply.started":"2024-10-16T15:29:18.690936Z","shell.execute_reply":"2024-10-16T15:29:19.563215Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"array(['Furniture', 'Home & Garden', 'Entertainment', 'Fashion',\n       'Electronics', 'Beauty & Health', 'Book & Stationary',\n       'Industry & Construction', 'Food & Drinks'], dtype=object)"},"metadata":{}}]},{"cell_type":"markdown","source":"# Comparator Price","metadata":{}},{"cell_type":"code","source":"np.random.seed(42)  # For reproducibility\nprice_variation = np.random.uniform(-20, 20, size=len(df_olist))\n\n# Step 2: Create the comparator price column\ndf_olist['comparator_price'] = df_olist['price'] + price_variation\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:43:12.364369Z","iopub.execute_input":"2024-10-16T15:43:12.365087Z","iopub.status.idle":"2024-10-16T15:43:13.010044Z","shell.execute_reply.started":"2024-10-16T15:43:12.364785Z","shell.execute_reply":"2024-10-16T15:43:13.008825Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"print(df_olist[['product_id', 'seller_id', 'price', 'comparator_price']].head())\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:43:13.011769Z","iopub.execute_input":"2024-10-16T15:43:13.012243Z","iopub.status.idle":"2024-10-16T15:43:16.410511Z","shell.execute_reply.started":"2024-10-16T15:43:13.012152Z","shell.execute_reply":"2024-10-16T15:43:16.409554Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"                         product_id                         seller_id   price  \\\n0  a9516a079e37a9c9c36b9b78b10169e8  7c67e1448b00f6e969d365cea6b010ab  124.99   \n1  a9516a079e37a9c9c36b9b78b10169e8  7c67e1448b00f6e969d365cea6b010ab  124.99   \n2  a9516a079e37a9c9c36b9b78b10169e8  7c67e1448b00f6e969d365cea6b010ab  124.99   \n3  a9516a079e37a9c9c36b9b78b10169e8  7c67e1448b00f6e969d365cea6b010ab  124.99   \n4  a9516a079e37a9c9c36b9b78b10169e8  7c67e1448b00f6e969d365cea6b010ab  124.99   \n\n   comparator_price  \n0        119.971605  \n1        143.018572  \n2        134.269758  \n3        128.936339  \n4        111.230746  \n","output_type":"stream"}]},{"cell_type":"code","source":"df_sampled = df_olist.sample(n=20000, random_state=42)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T16:08:39.474237Z","iopub.execute_input":"2024-10-16T16:08:39.474698Z","iopub.status.idle":"2024-10-16T16:08:40.770235Z","shell.execute_reply.started":"2024-10-16T16:08:39.474627Z","shell.execute_reply":"2024-10-16T16:08:40.768819Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# Create a new column for the month and year from the purchase timestamp\ndf_sampled['purchase_month'] = df_sampled['order_purchase_timestamp'].dt.to_period('M')\n\n# Generate a comparator price for each product and seller combination within the same month\ndef generate_comparator_price(group):\n    # Generate a random price variation between -20 and 20\n    price_variation = np.random.uniform(-20, 20)\n    # Calculate the comparator price\n    group['comparator_price'] = group['price'] + price_variation\n    return group\n\n# Apply the function to each group\ndf_sampled = df_sampled.groupby(['product_id', 'seller_id', 'purchase_month'], group_keys=False).apply(generate_comparator_price)\n\n# Optionally, drop the 'purchase_month' column if you don't need it\ndf_sampled.drop(columns=['purchase_month'], inplace=True)\n\n# Display the DataFrame with the new comparator_price column\nprint(df_sampled[['product_id', 'seller_id', 'price', 'comparator_price']].head())\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T16:12:04.297676Z","iopub.execute_input":"2024-10-16T16:12:04.298184Z","iopub.status.idle":"2024-10-16T16:13:03.780380Z","shell.execute_reply.started":"2024-10-16T16:12:04.298105Z","shell.execute_reply":"2024-10-16T16:13:03.779200Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"                                product_id                         seller_id  \\\n14480187  53759a2ecddad2bb87a079a1f1519f73  1f50f920176fa81dab994f9023523100   \n1984764   4f18ca9862f511ecba98258b2194d061  5b0cc932433fa5184b5b94bfe6bcc256   \n17309568  e251ebd2858be1aa7d9b2087a6992580  001cca7ae9ae17fb1caed9dfb1094831   \n12311270  a1ea5e26e19ed2e16b30866fb40735a7  8e6d7754bc7e0f22c96d255ebda59eba   \n10765218  c95ef8ea078a841a370c7ae96a552711  d9442042130b7fe579d1295f9f4a248f   \n\n           price  comparator_price  \n14480187   59.90         47.278362  \n1984764    95.00         90.199163  \n17309568  112.00        110.554609  \n12311270  207.91        212.687803  \n10765218   34.50         36.167473  \n","output_type":"stream"}]},{"cell_type":"code","source":"import os\n\nfile_path = 'df_olist_with_comparator.csv'\nif os.path.exists(file_path):\n    os.remove(file_path)\n    file_status = f\"'{file_path}' has been removed.\"\nelse:\n    file_status = f\"'{file_path}' does not exist.\"\n\nfile_status\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T16:17:33.223664Z","iopub.execute_input":"2024-10-16T16:17:33.224104Z","iopub.status.idle":"2024-10-16T16:17:33.234630Z","shell.execute_reply.started":"2024-10-16T16:17:33.224034Z","shell.execute_reply":"2024-10-16T16:17:33.233548Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"\"'df_olist_with_comparator.csv' has been removed.\""},"metadata":{}}]},{"cell_type":"code","source":"df_sampled.to_csv('df_sampled_olist.csv', index=False)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-16T16:17:39.602894Z","iopub.execute_input":"2024-10-16T16:17:39.603321Z","iopub.status.idle":"2024-10-16T16:17:40.772967Z","shell.execute_reply.started":"2024-10-16T16:17:39.603260Z","shell.execute_reply":"2024-10-16T16:17:40.771784Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\"\"\"# Set the chunk size (adjust depending on your memory capacity)\nchunk_size = 100000\n\n# Read the file in chunks\nchunks = pd.read_csv('df_olist.csv', chunksize=chunk_size)\n\n# Initialize an empty list to hold processed chunks\nprocessed_chunks = []\n\n# Process each chunk\nfor chunk in chunks:\n    # Convert to datetime format\n    chunk['order_purchase_timestamp'] = pd.to_datetime(chunk['order_purchase_timestamp'])\n    \n    # Extract the month from the purchase timestamp\n    chunk['purchase_month'] = chunk['order_purchase_timestamp'].dt.to_period('M')\n    \n    # Apply the comparator price function to the grouped data\n    chunk = chunk.groupby(['product_id', 'seller_id', 'purchase_month'], group_keys=False).apply(generate_comparator_price)\n    \n    # Drop 'purchase_month' if not needed after processing\n    chunk.drop(columns=['purchase_month'], inplace=True)\n    \n    # Append the processed chunk to the list\n    processed_chunks.append(chunk)\n\n# Concatenate all processed chunks into a single DataFrame\ndf_olist_processed = pd.concat(processed_chunks, ignore_index=True)\n\n# Save the final DataFrame to a CSV file\ndf_olist_processed.to_csv('df_olist_with_comparator.csv', index=False)\n\nprint(\"Data processing complete and saved to 'df_olist_with_comparator.csv'\")\n\"\"\"","metadata":{"execution":{"iopub.status.busy":"2024-10-16T15:44:24.667063Z","iopub.execute_input":"2024-10-16T15:44:24.667505Z","iopub.status.idle":"2024-10-16T15:44:24.674511Z","shell.execute_reply.started":"2024-10-16T15:44:24.667438Z","shell.execute_reply":"2024-10-16T15:44:24.673517Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"'# Set the chunk size (adjust depending on your memory capacity)\\nchunk_size = 100000\\n\\n# Read the file in chunks\\nchunks = pd.read_csv(\\'df_olist.csv\\', chunksize=chunk_size)\\n\\n# Initialize an empty list to hold processed chunks\\nprocessed_chunks = []\\n\\n# Process each chunk\\nfor chunk in chunks:\\n    # Convert to datetime format\\n    chunk[\\'order_purchase_timestamp\\'] = pd.to_datetime(chunk[\\'order_purchase_timestamp\\'])\\n    \\n    # Extract the month from the purchase timestamp\\n    chunk[\\'purchase_month\\'] = chunk[\\'order_purchase_timestamp\\'].dt.to_period(\\'M\\')\\n    \\n    # Apply the comparator price function to the grouped data\\n    chunk = chunk.groupby([\\'product_id\\', \\'seller_id\\', \\'purchase_month\\'], group_keys=False).apply(generate_comparator_price)\\n    \\n    # Drop \\'purchase_month\\' if not needed after processing\\n    chunk.drop(columns=[\\'purchase_month\\'], inplace=True)\\n    \\n    # Append the processed chunk to the list\\n    processed_chunks.append(chunk)\\n\\n# Concatenate all processed chunks into a single DataFrame\\ndf_olist_processed = pd.concat(processed_chunks, ignore_index=True)\\n\\n# Save the final DataFrame to a CSV file\\ndf_olist_processed.to_csv(\\'df_olist_with_comparator.csv\\', index=False)\\n\\nprint(\"Data processing complete and saved to \\'df_olist_with_comparator.csv\\'\")\\n'"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}